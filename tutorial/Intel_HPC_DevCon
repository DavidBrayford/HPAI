First ensure that your local has Docker and C/C++ compilers installed.

Download the latest release version of Charliecloud from the GitHub site https://github.com/hpc/charliecloud

Follow the instruction on how to build and install Charliecloud from the official website https://hpc.github.io/charliecloud/index.html

Once you have Successfully installed Charliecloud on your local Linux system. Download the version of the Intel optimized TensorFlow Docker image you require from https://hub.docker.com/u/intelaipg
If you are not familiar with using Docker please refer to the official Docker documentation https://docs.docker.com/ or other sources.

The next step is to modify the TensorFlow Docker image to support distributed execution of the TensorFlow framework.

Verify that you have successfully downloaded the Intel optimized TensorFlow Docker image by executing the command:
sudo docker images

next verify that you can execute the image using the command:
sudo docker run -it <image name> /bin/bash

Once you have verified that you can execute the Docker image exit the containerized image.

Now list the available containers using the command:
sudo docker ps -a

Now execute the container using the command:
sudo docker exec -it <container_ID> /bin/bash

In the terminal of the containerized image install the following software packages into the Ubuntu image with the command:
apt-get install libmpich-dev
apt-get install libmpich12
apt-get install gcc-8
apt-get install g++-8
apt-get install python3-numpy
apt-get install python-numpy
apt-get install vim

Once you have successfully installed the MPI libraries, you need to install horovod via the pip command:

Python3:
pip3 install horovod

Python2:
pip install horovod

If the Tensorflow benchmarks are not installed in the container use git to install the files:
git clone https://github.com/tensorflow/benchmarks.git

Now verify that you can execute the benchmark:
 python tf_cnn_benchmarks.py --model alexnet --batch_size 128 --data_format NCHW --num_batches 100 
 --distortions=False --mkl=True --local_parameter_device cpu --num_warmup_batches 10 --optimizer 
 rmsprop --display_every 10
 
 Distributed execution with mpiexec:
 mpiexec -n 2 python tf_cnn_benchmarks.py --model alexnet --batch_size 128 --data_format NCHW 
 --num_batches 100 --distortions=False --mkl=True --local_parameter_device cpu --num_warmup_batches 
10 --optimizer rmsprop --display_every 10 --variable_update horovod --horovod_device cpu 
--num_intra_threads 8 --kmp_blocktime 1 --num_inter_threads 2

Now exit the container.

List the containers with the command:
sudo docker ps -a

Save the modified container using the command:
sudo docker commit CONTAINER_ID new_container_name

Now that you have created a modified Docker image that supports distributed TensorFlow execution. The next step is to create a Charliecloud container from the new Docker image.

To build a flat tar.gz archive Charliecloud image use the command:
sudo ch-builder2tar <Docker_file_name> /dir/to/store/

This will create a file /dir/to/store/Docker_file_name.tar.gz

Now you can copy the Docker_file_name.tar.gz to the HPC system using scp.

Once the file has been copied to the HPC ensure that Charliecloud is available on the system and if not build it in your local directory and add the bin directory to your PATH.

To unpack the Docker_file_name.tar.gz file use the Charliecloud command:
ch-tar2dir Docker_file_name.tar.gz /foo/bar/

This will create a directory /foo/bar/Docker_file_name

Distrubted execute the an application inside the container using mpiexec and the command ch-run.

mpiexec -np 2 ch-run -w /HOME/foo/bar/Docker_file_name -- python /tensorflow/benchmarks/scripts/tf_cnn_benchmarks/tf_cnn_benchmarks.py 
--model alexnet --batch_size 128 --data_format NCHW --num_batches 100 
--distortions=False --mkl=True --local_parameter_device cpu --num_warmup_batches 
10 --optimizer rmsprop --display_every 10 --variable_update horovod 
--horovod_device cpu --num_intra_threads 8 --kmp_blocktime 1 --num_inter_threads 2
